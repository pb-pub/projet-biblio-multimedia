name: Build Executables

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        include:
          - os: ubuntu-22.04
            artifact_name: biblio-linux
            executable_extension: ""

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Qt (Ubuntu)
      if: matrix.os == 'ubuntu-22.04'
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.3'
        host: 'linux'
        target: 'desktop'
        modules: 'qtmultimedia'

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y libopencv-dev
        sudo apt-get install -y libglu1-mesa-dev freeglut3-dev mesa-common-dev
        sudo apt-get install -y libasound2-dev libpulse-dev

    - name: Configure CMake
      run: |
        cd biblio
        cmake -B build -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: |
        cd biblio
        cmake --build build --config Release

  release:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.3'
        host: 'linux'
        target: 'desktop'
        modules: 'qtmultimedia'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libopencv-dev
        sudo apt-get install -y libglu1-mesa-dev freeglut3-dev mesa-common-dev
        sudo apt-get install -y libasound2-dev libpulse-dev
        # Install linuxdeployqt
        wget -O linuxdeployqt https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
        chmod +x linuxdeployqt

    - name: Configure CMake
      run: |
        cd biblio
        cmake -B build -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: |
        cd biblio
        cmake --build build --config Release

    - name: Package Application
      run: |
        cd biblio/build
        mkdir -p package/biblio
        cp biblio package/biblio/
        cp -r assets package/biblio/
        # Bundle Qt libraries
        ../linuxdeployqt package/biblio/biblio -bundle-non-qt-libs -no-translations -no-copy-copyright-files
        # Create launcher script
        echo '#!/bin/bash' > package/biblio/run.sh
        echo 'cd "$(dirname "$0")"' >> package/biblio/run.sh
        echo 'export LD_LIBRARY_PATH="$PWD/lib:$LD_LIBRARY_PATH"' >> package/biblio/run.sh
        echo './biblio' >> package/biblio/run.sh
        chmod +x package/biblio/run.sh
        tar -czf ../biblio-linux.tar.gz -C package .

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          biblio/biblio-linux.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
